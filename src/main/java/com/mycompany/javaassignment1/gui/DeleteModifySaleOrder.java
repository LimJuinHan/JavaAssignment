/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.javaassignment1.gui;

import com.mycompany.javaassignment1.Session;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author godch
 */
public class DeleteModifySaleOrder extends javax.swing.JFrame {

    /**
     * Creates new form DeleteModifySaleOrder
     */
    public DeleteModifySaleOrder() {
        initComponents();
        setSaleInfoTable();
    }
    
    private void setSaleInfoTable(){
        Session session = Session.getInstance();
        String salesPersonName = session.getUsername();
        // Read sales data from the "sales.txt" file
        DefaultTableModel model = (DefaultTableModel) saleInfoTable.getModel();
        model.setRowCount(0); // Clear existing data

        // Set column headers
        model.setColumnIdentifiers(new String[]{"SaleID", "ProductID", "ProductName", "Category", "Type","Price", "Quantity", "State", "Date","SalesPersonName", "CustomerName"});

        try (BufferedReader reader = new BufferedReader(new FileReader("sales.txt"))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] fields = line.split(",");
                if (fields.length > 9 && fields[9].trim().equalsIgnoreCase(salesPersonName) && fields[7].trim().equalsIgnoreCase("Unapproved"))  {
                    Object[] row = {fields[0], fields[1], fields[2], fields[3], fields[4], fields[5], fields[6], fields[7], fields[8], fields[9], fields[10]};
                    model.addRow(row);
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error reading sales data.", "Error", JOptionPane.ERROR_MESSAGE);
        }       
    }

    private boolean removeSaleFromTxtFile(String saleID) {
        String fileName = "sales.txt";
        try {
            // Read all lines from the file into a list
            List<String> lines = Files.readAllLines(Paths.get(fileName));

            // Remove the line with the matching sale ID
            lines.removeIf(line -> line.startsWith(saleID + ","));

            // Write the updated list back to the file
            Files.write(Paths.get(fileName), lines);

            return true; // Deletion successful
        } catch (IOException e) {
            e.printStackTrace();
            return false; // Error occurred
        }
    }   

    private void updateStockQuantity(String productID, int quantity) {
        String fileName = "product.txt";
        try {
            // Read all lines from the file into a list
            List<String> lines = Files.readAllLines(Paths.get(fileName));

            // Find the line that corresponds to the product sold
            for (int i = 0; i < lines.size(); i++) {
                String line = lines.get(i);
                String[] fields = line.split(",");
                if (fields.length > 0 && fields[0].trim().equals(productID)) {
                    // Update the stock quantity for the product
                    int currentStock = Integer.parseInt(fields[6].trim());
                    int updatedStock = currentStock + quantity;
                    fields[6] = String.valueOf(updatedStock);
                    lines.set(i, String.join(",", fields));
                    break; // Stop searching once the product is found and updated
                }
            }

            // Write the updated list back to the file
            Files.write(Paths.get(fileName), lines);

        } catch (IOException e) {
            e.printStackTrace();
            // Handle the IOException appropriately (e.g., show error message)
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        saleInfoTable = new javax.swing.JTable();
        modifyButton = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);

        saleInfoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        saleInfoTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        saleInfoTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(saleInfoTable);
        saleInfoTable.getAccessibleContext().setAccessibleName("");
        saleInfoTable.getAccessibleContext().setAccessibleDescription("");
        saleInfoTable.getAccessibleContext().setAccessibleParent(jScrollPane1);

        modifyButton.setText("Modify");
        modifyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyButtonActionPerformed(evt);
            }
        });

        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        jLabel1.setText("Modify Or Delete Sale Order");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(modifyButton)
                        .addGap(18, 18, 18)
                        .addComponent(Delete))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1040, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modifyButton)
                    .addComponent(Delete))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // Get the index of the selected row
        int selectedRow = saleInfoTable.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Get the sale ID and quantity of the selected row
        String saleID = saleInfoTable.getValueAt(selectedRow, 0).toString();
        String productID = saleInfoTable.getValueAt(selectedRow, 1).toString();
        int quantity = Integer.parseInt(saleInfoTable.getValueAt(selectedRow, 6).toString());

        // Remove the row from the table
        DefaultTableModel model = (DefaultTableModel) saleInfoTable.getModel();
        model.removeRow(selectedRow);

        // Remove the corresponding data from the "sales.txt" file
        if (removeSaleFromTxtFile(saleID)) {
            // Update stock quantity in product.txt
            updateStockQuantity(productID, quantity);
            JOptionPane.showMessageDialog(this, "Sale order deleted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Error deleting sale order.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_DeleteActionPerformed

    private void modifyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modifyButtonActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeleteModifySaleOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeleteModifySaleOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeleteModifySaleOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeleteModifySaleOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeleteModifySaleOrder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Delete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modifyButton;
    private javax.swing.JTable saleInfoTable;
    // End of variables declaration//GEN-END:variables
}
